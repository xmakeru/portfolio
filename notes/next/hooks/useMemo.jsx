// Мемоизация - оптимизация функции. Если функция снова вызывается с теми же аргументами, результат берется
// из памяти("кеша"), а не вычисляется заново.

// useMemo() - хук, делает мемоизацию значения, чтобы не пересчитывать его заново при каждом рендере, 
// если зависимости не изменились

// const memoizedValue = useMemo(() => {
//   // длинные вычисления
//   return результат;
// }, [зависимости]);

// function MyComponent({ number }) {
//   const doubled = useMemo(() => {
//     return number * 2;
//   }, [number]);

//   return <div>Удвоенное число: {doubled}</div>;
// }

// Когда полезен?
// Когда тяжелые/дорогие вычисления (фильтрация, сортировка, подсчеты)
// Когда компонент часто ререндерится
// Когда надо оптимизировать производительность